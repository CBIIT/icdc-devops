pipeline {
	agent {
        node {
			label "docker-katalon-ch"
            }
        }

    parameters {

    gitParameter(branchFilter: 'origin/(.*)', 
        defaultValue: 'master', 
        name: 'Tag', 
        type: 'PT_BRANCH_TAG',
        quickFilterEnabled: false, 
        selectedValue: 'DEFAULT', 
        sortMode: 'ASCENDING_SMART', 
        tagFilter: '*', 
        useRepository: 'https://github.com/CBIIT/Commons_Automation')

    string(defaultValue: "Commons_Automation.prj", 
        description: 'Enter the Katalon Project file (include the path relative to the repo root):', 
        name: 'KatalonPrj')

    string(defaultValue: "Test Suites/Canine_TestSuite", 
        description: 'Enter the Katalon Suite Path (not including the test suite file):', 
        name: 'KatalonSuite')

	extendedChoice( 
        name: 'Profile', 
        defaultValue: 'Katalon_Dev_ICDC', 
        description: 'Choose the profile to use', 
        type: 'PT_SINGLE_SELECT',
        value: 'DEV_ICDC,QA_ICDC,STAGE_ICDC,PROD_ICDC,QA_CTDC,QA_MTP,QA_INS,QA_CCDC,QA_CRDC_DH,STAGE_CRDC_DH,QA_CCDI' )

	string(defaultValue: "gayathri.radhakrishnan@nih.gov,sohil.sohil@nih.gov", 
        description: 'Enter a list of email addresses to notify in case of test failures:', 
        name: 'EmailRecipients')

        }

    stages{
        stage('checkout'){
            steps {

                checkout([$class: 'GitSCM', 
                    branches: [[name: "${params.Tag}"]], 
                    doGenerateSubmoduleConfigurations: false,
					extensions: [],
					submoduleCfg: [], 
                    userRemoteConfigs: [[url: 'https://github.com/CBIIT/Commons_Automation']]])

                }
            }

		stage('set Profile'){
		    environment {
                KATALON_PRJ         =   "${params.KatalonPrj}"
                }
			steps {
                
				script {
					currentBuild.displayName = "#${env.BUILD_NUMBER} (${params.KatalonSuite} - ${params.Profile})"
					}

				script {
				    switch("${params.Profile}") {
                    case ~/[\w\/]+ICDC$/:
						PROJECT="ICDC"
						withCredentials([string(credentialsId: 'Sharepoint_Email', variable: 'results_email'),
						  string(credentialsId: 'Sharepoint_Url_ICDC', variable: 'sharepoint_url')]) {
                            RESULTS_URL="${sharepoint_url}"
							RESULTS_EMAIL="${results_email}"
                            }
                        break

					case ~/[\w\/]+MTP$/:
						PROJECT="MTP"
						withCredentials([string(credentialsId: 'Sharepoint_Email', variable: 'results_email'),
						  string(credentialsId: 'Sharepoint_Url_MTP', variable: 'sharepoint_url')]) {
                            RESULTS_URL="${sharepoint_url}"
							RESULTS_EMAIL="${results_email}"
                            }
                        break

					case ~/[\w\/]+INS$/:
						PROJECT="INS"
						withCredentials([string(credentialsId: 'Sharepoint_Email', variable: 'results_email'),
						  string(credentialsId: 'Sharepoint_Url_INS', variable: 'sharepoint_url')]) {
                            RESULTS_URL="${sharepoint_url}"
							RESULTS_EMAIL="${results_email}"
                            }
                        break

					case ~/[\w\/]+CCDC$/:
						PROJECT="CCDC"
						withCredentials([string(credentialsId: 'Sharepoint_Email', variable: 'results_email'),
						  string(credentialsId: 'Sharepoint_Url_CCDC', variable: 'sharepoint_url')]) {
                            RESULTS_URL="${sharepoint_url}"
							RESULTS_EMAIL="${results_email}"
                            }
                        break

					case ~/[\w\/]+CRDC-DH$/:
						PROJECT="CRDC-DH"
						withCredentials([string(credentialsId: 'Sharepoint_Email', variable: 'results_email'),
						  string(credentialsId: 'Sharepoint_Url_CRDC_DH', variable: 'sharepoint_url')]) {
                            RESULTS_URL="${sharepoint_url}"
							RESULTS_EMAIL="${results_email}"
                            }
                        break

					case ~/[\w\/]+CCDI$/:
						PROJECT="CCDI"
						withCredentials([string(credentialsId: 'Sharepoint_Email', variable: 'results_email'),
						  string(credentialsId: 'Sharepoint_Url_CCDI', variable: 'sharepoint_url')]) {
                            RESULTS_URL="${sharepoint_url}"
							RESULTS_EMAIL="${results_email}"
                            }
                        break
					}

					switch("${params.Profile}") {
                    case "DEV_ICDC":
						TIER="DEV"
						withCredentials([file(credentialsId: 'Katalon_Dev_ICDC', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break
                    case "QA_ICDC":
						TIER="QA"
						withCredentials([file(credentialsId: 'Katalon_QA_ICDC', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break
                    case "STAGE_ICDC":
						TIER="STAGE"
						withCredentials([file(credentialsId: 'Katalon_STAGE_ICDC', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break
                    case "PROD_ICDC":
						TIER="PROD"
						withCredentials([file(credentialsId: 'Katalon_PROD_ICDC', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break

                    case "QA_MTP":
						TIER="QA"
						withCredentials([file(credentialsId: 'Katalon_QA_MTP', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break

                    case "QA_INS":
						TIER="QA"
						withCredentials([file(credentialsId: 'Katalon_QA_INS', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break

                    case "QA_CCDC":
						TIER="QA"
						withCredentials([file(credentialsId: 'Katalon_QA_CCDC', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break

					case "QA_CRDC_DH":
						TIER="QA"
						withCredentials([file(credentialsId: 'Katalon_QA_CRDC_DH', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break

					case "STAGE_CRDC_DH":
						TIER="STAGE"
						withCredentials([file(credentialsId: 'Katalon_STAGE_CRDC_DH', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break

					// CCDI
					case "QA_CCDI":
						TIER="QA"
						withCredentials([file(credentialsId: 'Katalon_QA_CCDI', variable: 'pass_file')]) {
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break

					case "QA_CTDC":
						WIKI_PAGE="289178298"
						PROJECT="CTDC"
						TIER="QA"
						withCredentials([string(credentialsId: 'Box_Email_QA_CTDC', variable: 'box_email'),
						  string(credentialsId: 'Box_Url_QA_CTDC', variable: 'box_url'),
						  file(credentialsId: 'Katalon_QA_CTDC', variable: 'pass_file')]) {
                            RESULTS_URL="${box_url}"
							RESULTS_EMAIL="${box_email}"
							PROFILE="${pass_file}"
							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
                            }
                        break
                       }
                    }
				}
			}

		stage('run tests'){
            environment {
				KATALON_BROWSER     =   "Chrome"
				KATALON_PROFILE     =   "${params.Profile}"
                KATALON_PRJ         =   "${params.KatalonPrj}"
                KATALON_SUITE_PATH  =   "${params.KatalonSuite}"
				PROFILE_FILE        =   "${PROFILE}"
                }
				
            steps {

				script {
						withCredentials([string(credentialsId: 'Katalon_API_Key', variable: 'api_key'),
						    string(credentialsId: 'Katalon_Org_ID', variable: 'org_id')]) {

							sh label: 'Katalon-Tests', script: '''#!/bin/bash
								
								# Set datestamp for results file
								dateStamp=$(date +%Y%m%d)
								reportFile="${KATALON_PROFILE}_${dateStamp}_build_${BUILD_NUMBER}"

								# Recreate the results directory
								rm -rf results && mkdir results
								
								# Create the output files directory (required for writing excel files)
								rm -rf OutputFiles && mkdir OutputFiles
								
								# Update profile filename
								profile_file=$(basename $PROFILE_FILE)
								profile_name="${profile_file%.*}"

								#################### UPDATE CHROME DRIVER (v108 - for Katalonstudio 5.5) ####################

								# Echo versions
								echo "Pre Update:"
								google-chrome --version
								/opt/katalonstudio/configuration/resources/drivers/chromedriver_linux64/chromedriver --version
								
								# get chromedriver v108.x
								wget https://chromedriver.storage.googleapis.com/108.0.5359.71/chromedriver_linux64.zip
								
								# backup and replace chromedriver
								mv /opt/katalonstudio/configuration/resources/drivers/chromedriver_linux64/chromedriver /opt/katalonstudio/configuration/resources/drivers/chromedriver_linux64/chromedriver.bak
								unzip chromedriver_linux64.zip
								mv chromedriver /opt/katalonstudio/configuration/resources/drivers/chromedriver_linux64/
								
								# Echo versions
								echo "Post Update:"
								google-chrome --version
								/opt/katalonstudio/configuration/resources/drivers/chromedriver_linux64/chromedriver --version
								
								#############################################################################################

								#echo "projectPath=$KATALON_PRJ testSuitePath=$KATALON_SUITE_PATH executionProfile=$profile_name filename=$profile_file"
								
								# Run Katalon Tests
								katalonc -noSplash -runMode=console --config -projectPath="$WORKSPACE/$KATALON_PRJ" -retry=0 -testSuitePath="$KATALON_SUITE_PATH" -executionProfile="$profile_name" -browserType="$KATALON_BROWSER (headless)" -reportFolder="results" -reportFileName="$reportFile" -apiKey="$api_key" -orgID="$org_id"

								'''

							}
						}

                }
            }
        }
		post {
			always {

				publishHTML([allowMissing: true,
					alwaysLinkToLastBuild: false,
					keepAll: false,
					reportDir: 'results',
					reportFiles: '*.html',
					reportName: 'HTML Report',
					reportTitles: ''])
				
				script {

					sh label: 'Zip-Katalon-Results', script: '''#!/bin/bash

					mv /etc/apt/sources.list.d/google-chrome.list /etc/apt/sources.list.d/google-chrome.list.bak && apt-get update && apt-get install -y zip
					
					resultsFile=$(basename results/*.html)
					zipFile=$(basename -s .html results/*.html)
					
					zip -r results/$zipFile.zip OutputFiles
					#zip -u results/$zipFile.zip results/$resultsFile
					zip -u -r results/$zipFile.zip Reports
					zip -u -r results/$zipFile.zip results

					'''

				}

				emailext(attachmentsPattern: 'results/*.zip',
                    body: 'Katalon Test Results',
                    subject: 'Katalon Test Results',
                    to: "${params.EmailRecipients}")

			}
			
			cleanup {

	            cleanWs()

	            }
	}
}	