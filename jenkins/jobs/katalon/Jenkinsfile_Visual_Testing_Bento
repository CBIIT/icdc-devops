pipeline {
	agent {
        node { 
			label "docker-katalon-vt-ec2"
			//label "docker-katalon-ch"
            }
        }

    parameters {

    gitParameter(branchFilter: 'origin/(.*)', 
        defaultValue: 'master', 
        name: 'Branch', 
        type: 'PT_BRANCH_TAG',
        quickFilterEnabled: false, 
        selectedValue: 'DEFAULT', 
        sortMode: 'ASCENDING_SMART', 
        tagFilter: '*', 
        useRepository: 'https://github.com/CBIIT/active-testing.git')

    string(defaultValue: "VT_Test.prj", 
        description: 'Enter the Katalon Project file (include the path relative to the repo root):', 
        name: 'KatalonPrj')

    string(defaultValue: "Test Suites/MTP_22.11_ALL", 
        description: 'Enter the Katalon Suite Path (not including the test suite file):', 
        name: 'KatalonSuite')

//	extendedChoice( 
//        name: 'Profile', 
//        defaultValue: 'default', 
//        description: 'Choose the profile to use', 
//        type: 'PT_SINGLE_SELECT',
//        value: 'DEV_ICDC,QA_ICDC,STAGE_ICDC,PROD_ICDC,QA_CTDC,QA_MTP,QA_INS,QA_CCDC' )

	string(defaultValue: "", 
        description: 'Enter a list of email addresses to notify in case of test failures:', 
        name: 'EmailRecipients')

    string(defaultValue: "", 
        description: 'Enter a list of email addresses to notify in case of test failures:', 
        name: 'OrgID')

    string(defaultValue: "", 
        description: 'Enter a list of email addresses to notify in case of test failures:', 
        name: 'ApiKey')

        }

    stages{
        stage('checkout'){
            steps {

                checkout([$class: 'GitSCM', 
                    branches: [[name: "${params.Branch}"]], 
                    doGenerateSubmoduleConfigurations: false,
					extensions: [],
					submoduleCfg: [], 
                    userRemoteConfigs: [[url: 'https://github.com/CBIIT/active-testing.git']]])

                }
            }
//		stage('set Profile'){
//		    environment {
//                KATALON_PRJ         =   "${params.KatalonPrj}"
//                }
//			steps {
//                script {
//				    switch("${params.Profile}") {
//					case ~/[\w\/]+MTP$/:
//						PROJECT="MTP"
//						withCredentials([string(credentialsId: 'Sharepoint_Email', variable: 'results_email'),
//						  string(credentialsId: 'Sharepoint_Url_MTP', variable: 'sharepoint_url')]) {
//                            RESULTS_URL="${sharepoint_url}"
//							RESULTS_EMAIL="${results_email}"
//                            }
//                        break
//
//					}
//
//					switch("${params.Profile}") {
//                    case "QA_MTP":
//						TIER="QA"
//						withCredentials([file(credentialsId: 'Katalon_QA_MTP', variable: 'pass_file')]) {
//							PROFILE="${pass_file}"
//							sh "cp ${pass_file} ${WORKSPACE}/Profiles/"
//                            }
//                        break
//
//                       }
//                    }
//				}
//			}

		stage('run tests'){
            environment {
				KATALON_BROWSER     =   "Chrome"
//				KATALON_PROFILE     =   "${params.Profile}"
                KATALON_PRJ         =   "${params.KatalonPrj}"
                KATALON_SUITE_PATH  =   "${params.KatalonSuite}"
//				PROFILE_FILE        =   "${PROFILE}"
//				PARAM_API_KEY       =   "${params.ApiKey}"
//				PARAM_ORG_ID        =   "${params.OrgID}"
                }
            steps {

				script {
//						withCredentials([string(credentialsId: 'Katalon_VT_API_Key', variable: 'api_key'),
//						    string(credentialsId: 'Katalon_VT_Org_ID', variable: 'org_id')]) {

							sh label: 'Katalon-Tests', script: '''#!/bin/bash
								
								# Set datestamp for results file
								dateStamp=$(date +%Y%m%d)
								#reportFile="${KATALON_PROFILE}_${dateStamp}_build_${BUILD_NUMBER}"
								reportFile="${dateStamp}_build_${BUILD_NUMBER}"

								# Recreate the results directory
								rm -rf results && mkdir results
								
								# Create the output files directory (required for writing excel files)
								rm -rf OutputFiles && mkdir OutputFiles
								
								# Update profile filename
								#profile_file=$(basename $PROFILE_FILE)
								#profile_name="${profile_file%.*}"
								
								#echo "projectPath=$WORKSPACE/$KATALON_PRJ testSuitePath=$KATALON_SUITE_PATH executionProfile=$profile_name filename=$profile_file"
								
								# get creds
                                echo "API Key:     $API_KEY" > tmp
                                echo "Org ID:      $ORG_ID" >> tmp
								cat tmp
								
								# Run Katalon Tests
								#katalonc -noSplash -runMode=console --config -projectPath="$WORKSPACE/$KATALON_PRJ" -retry=0 -testSuitePath="$KATALON_SUITE_PATH" -executionProfile="default" -browserType="$KATALON_BROWSER" -reportFolder="results" -reportFileName="$reportFile" -apiKey="$api_key" -orgID="$org_id"
								katalonc -noSplash -runMode=console --config -projectPath="$WORKSPACE/$KATALON_PRJ" -retry=0 -testSuitePath="$KATALON_SUITE_PATH" -executionProfile="default" -statusDelay=15 -browserType="Chrome" -testcloudTunnel="false" -testcloudEnvironmentId="49" -apiKey="$API_KEY" -orgID="$ORG_ID"

								'''

//							}
						}

                }
            }
        }
		post {

			cleanup {

	            cleanWs()

	            }

			}
	}