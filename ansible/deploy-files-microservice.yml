- name: ctdc deploy pipeline
  hosts: bento
  connection: local
  gather_facts: yes
  become: yes

  tasks:
    #install collections
    - name: install aws collection
      command: ansible-galaxy collection install {{item}}
      loop:
        - community.docker
        - amazon.aws
        - community.aws:<=3.2.0
        - git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,main


    #docker login
    - name: docker login
      include_role:
        name: bento.common.ecr_login
      vars:
        region: us-east-1
    - name: set tier to prod for dev,qa,perf
      set_fact:
        cloudfront_key_group_name: "bento-prod-pub-key"
        cloudfront_origin_id: "{{project_name}}_files_origin_id"
      when: 
#        - tier == 'dev' or tier == 'qa' or tier == 'perf'
        - project_name == 'bento'

    - name: get distribution domain name
      command: aws cloudfront list-distributions --query "DistributionList.Items[?Origins.Items[?Id=='{{cloudfront_origin_id}}']].DomainName |[0]" --output text
      register: dist_info

    - name: retrieve key group id 
      command:  aws cloudfront list-public-keys --query "PublicKeyList.Items[?Name=='{{cloudfront_key_group_name}}'].Id |[0]" --output text --region us-east-1
      register: key_group

    - name: set facts distribution DomainName and key_group id
      set_fact:
        cloudfront_domain_name: "{{dist_info.stdout_lines | map('trim') | list |first}}"
        cloudfront_key_group_id: "{{key_group.stdout_lines | map('trim') | list |first}}"

    - name: show cloudfront_key_group_name
      debug:
        msg: "{{cloudfront_key_group_id}}"

    #deploy files
    - name: deploy stage for ctdc files
      include_role:
        name: bento.common.ecs_cloudwatch
      vars:
        ansible_python_interpreter: /usr/bin/python3
        execution_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-execution-role{% else %}{{ project_name }}-{{ tier }}-task-execution-role{% endif %}"
        task_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-role{% else %}{{ project_name }}-{{ tier }}-task-role{% endif %}"
        cloudfront_key_group_name: "{{project_name}}-{{tier}}-pub-key"
        cloudfront_private_key: "{{ lookup('aws_ssm', 'bento_files_cloudfront_private_key', region='us-east-1' ) }}"
        project_name: "{{project_name}}"
        region: us-east-1
        container_name: "files"
        files_version: "{{ lookup('env','FILES_VERSION') }}"
        image_version: "{{ files_version}}"
        tier: "{{ tier }}"
        ecs_cluster_name: "{{ project_name }}-{{ tier }}-ecs"
        sumo_collector_endpoint: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_endpoint', nested=true, region='us-east-1' ) }}"
        sumo_collector_token: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_token_files', nested=true, region='us-east-1' ) }}"
        container_port: "8081"
        container_memory: "512"
        container_cpu: "256"
        container_image_url: "{{ ecr_repo }}/{{ project_name }}-{{ container_name }}"
        url_src: CLOUD_FRONT
        auth_enabled: "false"
        newrelic_license_key: "{{ lookup('amazon.aws.aws_secret', 'monitoring/newrelic.api_key', nested=true, region='us-east-1' ) }}"
        container_env:
        - name: VERSION
          value: "{{files_version}}"
        - name: DATE
          value: "{{ansible_date_time.date}}"
        - name: PROJECT
          value: "{{project_name}}"
        - name: CF_URL
          value: https://{{cloudfront_domain_name}}
        - name: CF_PRIVATE_KEY
          value: "{{cloudfront_private_key}}"
        - name: CF_KEY_PAIR_ID
          value: "{{cloudfront_key_group_id}}"
        - name: URL_SRC
          value: "{{url_src}}"
        - name: AUTH_ENABLED
          value: "{{auth_enabled}}"
        - name: AUTH_URL
          value: "{% if tier == 'prod' %}https://bento-tools.org/api/auth/authenticated{% else %}https://{{project_name}}-{{ tier }}.bento-tools.org/api/auth/authenticated{% endif %}"
        - name: BACKEND_URL
          value: "{% if tier == 'prod' %}https://bento-tools.org/v1/graphql/{% else %}https://{{project_name}}-{{ tier }}.bento-tools.org/v1/graphql/{% endif %}"
        - name: NEW_RELIC_LICENSE_KEY
          value: "{{ newrelic_license_key }}"
        - name: NEW_RELIC_APP_NAME
          value: "{{project_name}}-{{tier}}-files-{{ansible_hostname}}"
