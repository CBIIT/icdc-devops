- name: ctdc deploy pipeline
  hosts: bento
  connection: local
  gather_facts: yes
  become: yes

  vars:
    - use_neo4j_container: no

  tasks:
    #install collections
    - name: install aws collection
      command: ansible-galaxy collection install {{item}}
      loop:
        - community.docker
        - amazon.aws
        - community.aws:<=3.2.0
        - git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,v1.0


    #docker login
    - name: docker login
      include_role:
        name: bento.common.ecr_login
      vars:
        region: us-east-1

    - name: get neo4j container ip
      block:
        - name: list tasks
          shell: >
            aws ecs list-tasks --service-name {{project_name}}-{{tier}}-neo4j 
            --region us-east-1 --cluster {{project_name}}-{{tier}}-ecs 
            --query 'taskArns[0]' --output text
          register: task_facts

        - name: set task_fact
          set_fact:
            task_arn: "{{task_facts.stdout_lines | first}}"

        - name: get task ip
          shell: >
            aws ecs describe-tasks 
            --tasks {{task_arn}}
            --region us-east-1 --cluster {{project_name}}-{{tier}}-ecs 
            --query "tasks[0].attachments[0].details[?name=='privateIPv4Address'].value |[0]"
            --output text
          register: task_facts

        - name: set task_fact
          set_fact:
            task_ip: "{{task_facts.stdout_lines | first}}"

        - name: show container ip
          debug:
            msg: "{{task_ip}}"
      when: use_neo4j_container == "yes"


    #deploy files
    - name: deploy stage files
      include_role:
        name: bento.common.ecs
      vars:
        cloudfront_key_group_name: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.key_group_name', nested=true, region='us-east-1' ) }}"
        cloudfront_origin_id: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.origin_id', nested=true, region='us-east-1' ) }}"
        cloudfront_domain_name: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.domain_name', nested=true, region='us-east-1' ) }}"
        cloudfront_key_group_id: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.key_group_id', nested=true, region='us-east-1' ) }}"
        #cloudfront_private_key: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.privatekey', nested=true, region='us-east-1' ) }}"
        cloudfront_private_key: "{{ lookup('amazon.aws.aws_secret', 'cloudfront.privatekey', nested=true, region='us-east-1' ) | b64decode }}"
        ansible_python_interpreter: /usr/bin/python3
        execution_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-execution-role{% else %}{{ project_name }}-{{ tier }}-task-execution-role{% endif %}"
        task_role: "{% if iam_prefix is defined and iam_prefix != '' %}{{ iam_prefix }}-{{ project_name }}-{{ tier }}-ecs-task-role{% else %}{{ project_name }}-{{ tier }}-task-role{% endif %}"
#        cloudfront_key_group_name: "{{project_name}}-{{tier}}-pub-key"
#        cloudfront_private_key: "{{ lookup('aws_ssm', 'bento_files_cloudfront_private_key', region='us-east-1' ) }}"
        project_name: "{{project_name}}"
        region: us-east-1
        container_name: "files"
        files_version: "{{ lookup('env','FILES_VERSION') }}"
        image_version: "{{ files_version}}"
        tier: "{{ tier }}"
        neo4j_ec2_db_ip: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_ip', nested=true, region='us-east-1' ) }}"
        neo4j_ip: "{% if task_ip is defined  %}{{task_ip}}{% else %}{{neo4j_ec2_db_ip}}{% endif %}"
        mysql_host: "{{ lookup('amazon.aws.aws_secret', 'bento/{{project_name}}/{{tier}}.mysql_host', nested=true, region='us-east-1' ) }}"
        mysql_user: "{{ lookup('amazon.aws.aws_secret', 'bento/{{project_name}}/{{tier}}.mysql_user', nested=true, region='us-east-1' ) }}"
        mysql_password: "{{ lookup('amazon.aws.aws_secret', 'bento/{{project_name}}/{{tier}}.mysql_password', nested=true, region='us-east-1' ) }}"
        mysql_database: "{{ lookup('amazon.aws.aws_secret', 'bento/{{project_name}}/{{tier}}.mysql_database', nested=true, region='us-east-1' ) }}"
        ecs_cluster_name: "{{ project_name }}-{{ tier }}-ecs"
        sumo_collector_endpoint: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_endpoint', nested=true, region='us-east-1' ) }}"
        sumo_collector_token: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_token_files', nested=true, region='us-east-1' ) }}"
        container_port: "8081"
        container_memory: "512"
        container_cpu: "256"
        container_image_url: "{{ ecr_repo }}/{{ project_name }}-{{ container_name }}"
        url_src: CLOUD_FRONT
        auth_enabled: "false"
        newrelic_license_key: "{{ lookup('amazon.aws.aws_secret', 'monitoring/newrelic.api_key', nested=true, region='us-east-1' ) }}"
        cookie_secret: "{{ lookup('amazon.aws.aws_secret', 'auth/provider/google.cookie_secret', nested=true, region='us-east-1' ) }}"
        container_env:
        - name: VERSION
          value: "{{files_version}}"
        - name: DATE
          value: "{{ansible_date_time.date}}"
        - name: PROJECT
          value: "{{project_name}}"
        - name: CF_URL
          value: https://{{cloudfront_domain_name}}
        - name: CF_PRIVATE_KEY
          value: "{{cloudfront_private_key}}"
        - name: CF_KEY_PAIR_ID
          value: "{{cloudfront_key_group_id}}"
        - name: URL_SRC
          value: "{{url_src}}"
        - name: AUTH_ENABLED
          value: "{{auth_enabled}}"
        - name: AUTH_URL
          value: "{% if tier == 'prod'  and project_name == 'bento' %}https://{{domain_name}}/api/auth/authenticated{% elif tier == 'prod' %}https://{{subdomain}}.{{domain_name}}/api/auth/authenticated{% else %}https://{{subdomain}}-{{tier}}.{{domain_name}}/api/auth/authenticated{% endif %}"
        - name: BACKEND_URL
          value: "{% if tier == 'prod'  and project_name == 'bento' %}https://{{domain_name}}/v1/graphql/{% elif tier == 'prod' %}https://{{subdomain}}.{{domain_name}}/v1/graphql/{% else %}https://{{subdomain}}-{{tier}}.{{domain_name}}/v1/graphql/{% endif %}"
        - name: NEW_RELIC_LICENSE_KEY
          value: "{{ newrelic_license_key }}"
        - name: NEW_RELIC_APP_NAME
          value: "{{project_name}}-{{tier}}-files-{{ansible_hostname}}"
        - name: NEO4J_USER
          value: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_user', nested=true, region='us-east-1' ) }}"
        - name: NEO4J_PASSWORD
          value: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_password', nested=true, region='us-east-1' ) }}"
        - name: NEO4J_URI
          value: "bolt://{{neo4j_ip}}:7687"
        # MySQL Configuration
        - name: MYSQL_HOST
          value: "{{mysql_host}}"
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_PASSWORD
          value: "{{mysql_password}}"
        - name: MYSQL_USER
          value: "{{mysql_user}}"
        - name: MYSQL_DATABASE
          value: "{{mysql_database}}"
        - name: MYSQL_SESSION_ENABLED
          value: "true"
        - name: COOKIE_SECRET
          value: "{{cookie_secret}}"

